[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "http-service"
version = "1.0.0"
description = "A comprehensive, robust HTTP client service built with HTTPX"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
maintainers = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["http", "client", "httpx", "retry", "circuit-breaker", "rate-limiting", "authentication", "ssl", "tls"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",

    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Clients",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
requires-python = ">=3.8"
dependencies = [
    "httpx>=0.25.0,<1.0.0",
    "python-dotenv>=1.0.0,<2.0.0",
    "certifi>=2023.0.0",
    "urllib3>=2.0.0,<3.0.0",
    "typing-extensions>=4.0.0; python_version<\"3.8\"",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.0.0,<3.0.0",
]
docs = [
    "sphinx>=6.0.0,<7.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "myst-parser>=1.0.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.23.0,<2.0.0",
]
test = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "responses>=0.23.0,<1.0.0",
    "aioresponses>=0.7.0,<1.0.0",
]
lint = [
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.0.0,<3.0.0",
]
security = [
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.0.0,<3.0.0",
    "pip-audit>=2.4.0,<3.0.0",
]
performance = [
    "pytest-benchmark>=4.0.0,<5.0.0",
    "memory-profiler>=0.60.0,<1.0.0",
    "psutil>=5.9.0,<6.0.0",
]
all = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-xdist>=3.0.0,<4.0.0",
    "responses>=0.23.0,<1.0.0",
    "aioresponses>=0.7.0,<1.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<2.0.0",
    "pre-commit>=3.0.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
    "safety>=2.0.0,<3.0.0",
    "pip-audit>=2.4.0,<3.0.0",
    "sphinx>=6.0.0,<7.0.0",
    "sphinx-rtd-theme>=1.2.0,<2.0.0",
    "myst-parser>=1.0.0,<2.0.0",
    "sphinx-autodoc-typehints>=1.23.0,<2.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "memory-profiler>=0.60.0,<1.0.0",
    "psutil>=5.9.0,<6.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/modular-http-client"
Documentation = "https://modular-http-client.readthedocs.io/"
Repository = "https://github.com/yourusername/modular-http-client"
"Bug Tracker" = "https://github.com/yourusername/modular-http-client/issues"
"Changelog" = "https://github.com/yourusername/modular-http-client/blob/master/CHANGELOG.md"

[project.scripts]
http-service = "http_service.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["http_service*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
http_service = ["*.env", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["http_service"]
known_third_party = ["httpx", "dotenv", "certifi", "urllib3"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "httpx.*",
    "dotenv.*",
    "certifi.*",
    "urllib3.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --cov=http_service --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as async tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
]

[tool.coverage.run]
source = ["http_service"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "pass",
    "raise$",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
